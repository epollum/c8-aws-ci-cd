name: 'Deploy updated BPMNs to Zeebe'

on:
  push:
    branches:
      - saas
    paths:
      - 'src/main/resources/*.bpmn' # match '*.bpmn' files (created or updated)
      - 'src/main/resources/*.dmn' # match '*.dmn' files (created or updated)
      - 'src/main/resources/*.form' # match '*.form' files (created or updated)

jobs:
  prepare-files:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Get changed files in the docs folder
        id: changed-files
        uses: tj-actions/changed-files@ed68ef82c095e0d48ec87eccea555d944a631a4c
        with:
          files: src/main/resources/*.{bpmn,dmn,form} # only select changed files of .bpmn, .dmn, and .form from the src/main/resources folder

      - name: List all changed files
        env:
          ALL_MODIFIED_FILES: ${{ steps.changed-files.outputs.modified_files }}
          ALL_ADDED_FILES: $${{ steps.changed-files.outputs.added_files }}
        run: |
          echo "$ALL_MODIFIED_FILES}}"
          modified_files=$(echo "$ALL_MODIFIED_FILES" | jq --raw-input 'split(" ")')
          echo "modified-files=$modified_files" >> $GITHUB_OUTPUT
          echo "$modified_files"
          echo "Parsing adding files"
          echo "$ALL_ADDED_FILES"
          added_files=$(echo "$ALL_ADDED_FILES" | jq --raw-input 'split(" ")')
          echo "added-files=$added_files" >> $GITHUB_OUTPUT
          echo "$added_files"

  deploy-modified-files:
    if: ${{ needs.prepare-files.outputs.modified-files != '[]' }}
    needs: [prepare-files]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        file: ${{ fromJSON(needs.prepare-files.outputs.modified-files) }}
    steps:
      - name: Check Out Reference File
        uses: Bhacaz/checkout-files@v2
        with:
          files: ${{ matrix.file }}

      - name: Echo file
        run: |
          echo ${{ matrix.file }} # to test if the correct file was passed

      - name: Get Bearer Token
        id: get-bearer-token
        run: |
          token=$(curl -s "https://login.cloud.camunda.io/oauth/token" --header 'Content-Type: application/x-www-form-urlencoded' --data-urlencode 'grant_type=client_credentials' --data-urlencode "client_id=${{ secrets.ZEEBE_CLIENT_ID}}" --data-urlencode "client_secret=${{ secrets.ZEEBE_CLIENT_SECRET }}" --data-urlencode 'audience=zeebe.camunda.io' | jq -r '.access_token')
          echo "token=$token" >> $GITHUB_OUTPUT

      - name: Deploy to Zeebe
        run: |
          curl -X POST "https://${{ secrets.CLUSTER_REGION }}.zeebe.camunda.io/${{ secrets.CLUSTER_ID }}/v2/deployments" -H "Authorization: Bearer ${{ steps.get-bearer-token.outputs.token }}" -F "resources=@${{ github.workspace }}/${{ matrix.file }}"

#  deploy-new-files:
#    if: ${{ needs.prepare-files.outputs.matrix-added != '[]' }}
#    needs: [prepare-files]
#    runs-on: ubuntu-latest
#    strategy:
#      matrix:
#        file: ${{ fromJSON(needs.prepare-files.outputs.matrix-added) }}
#    steps:
#      - name: Check Out Reference File
#        uses: Bhacaz/checkout-files@v2
#        with:
#          files: ${{ matrix.file }}
#
#      - name: Get Bearer Toker
#        uses: fjogeleit/http-request-action@v1.16.4
#        id: zeebeBearer
#        with:
#          url: 'https://login.cloud.camunda.io/oauth/token'
#          method: 'POST'
#          customHeaders: '{"Content-Type": "application/x-www-form-urlencoded"}'
#          data: 'grant_type=client_credentials&audience=zeebe.camunda.io&client_id=${{ secrets.ZEEBE_CLIENT_ID }}&client_secret=${{ secrets.ZEEBE_CLIENT_SECRET }}'
#
#      - name: Deploy to Zeebe
#        run: |
#          curl -X POST "https://${{ secrets.CLUSTER_REGION }}.zeebe.camunda.io/${{ secrets.CLUSTER_ID }}/v2/deployments" -H "Authorization: Bearer ${{ steps.get-bearer-token.outputs.status }}" -F "resources=@${{ github.workspace }}/${{ matrix.file }}"